name: Build APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04  # ← تغییر به 22.04 (پایدارتر)
    timeout-minutes: 90
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python 3.9
      uses: actions/setup-python@v5
      with:
        python-version: '3.9'  # ← Python 3.9 سازگارتر با Kivy
    
    - name: 💾 Cache Buildozer
      uses: actions/cache@v4
      with:
        path: |
          .buildozer
          ~/.buildozer
        key: buildozer-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
        restore-keys: |
          buildozer-${{ runner.os }}-
    
    - name: 📦 Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          python3-pip \
          build-essential \
          git \
          zip \
          unzip \
          openjdk-17-jdk \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          libffi-dev \
          libssl-dev \
          cmake \
          ccache
    
    - name: 🔧 Install Buildozer and Cython
      run: |
        pip3 install --upgrade pip
        pip3 install --upgrade wheel
        pip3 install --upgrade setuptools
        pip3 install buildozer==1.5.0
        pip3 install cython==0.29.33
    
    - name: 🔨 Setup environment
      run: |
        # Setup buildozer directory
        mkdir -p ~/.buildozer
        
        # Setup spec file
        if ! grep -q "warn_on_root" buildozer.spec; then
          echo "" >> buildozer.spec
          echo "[buildozer]" >> buildozer.spec
          echo "warn_on_root = 0" >> buildozer.spec
        else
          sed -i 's/warn_on_root = 1/warn_on_root = 0/g' buildozer.spec
        fi
        
        # Display config
        echo "=== Buildozer Spec ==="
        cat buildozer.spec
    
    - name: 🏗️ Build APK with Buildozer
      run: |
        yes | buildozer android debug
      continue-on-error: false
    
    - name: 📋 Show build directory
      if: always()
      run: |
        echo "=== Checking for APK ==="
        ls -R bin/ 2>/dev/null || echo "No bin directory"
        find . -name "*.apk" -type f 2>/dev/null || echo "No APK found"
    
    - name: 📤 Upload APK
      if: success()
      uses: actions/upload-artifact@v4
      with:
        name: VocabApp-APK-v${{ github.run_number }}
        path: bin/*.apk
        retention-days: 30
        if-no-files-found: warn
    
    - name: 📊 Build info
      if: success()
      run: |
        echo "✅ Build successful!"
        for apk in bin/*.apk; do
          if [ -f "$apk" ]; then
            echo "📦 $(basename $apk): $(du -h $apk | cut -f1)"
          fi
        done
