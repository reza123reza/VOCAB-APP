name: Build APK

on:
  push:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
    
    - name: 🐍 Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
    
    - name: 💾 Cache Buildozer global directory
      uses: actions/cache@v4
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
    
    - name: 💾 Cache Buildozer directory
      uses: actions/cache@v4
      with:
        path: .buildozer
        key: buildozer-${{ hashFiles('buildozer.spec') }}
    
    - name: 📦 Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git zip unzip openjdk-17-jdk wget \
          autoconf libtool pkg-config \
          zlib1g-dev libncurses5-dev libncursesw5-dev \
          libtinfo5 cmake libffi-dev libssl-dev
    
    - name: 🔧 Install Buildozer
      run: |
        pip install --upgrade pip
        pip install buildozer cython==0.29.33
    
    - name: ⚙️ Configure Buildozer
      run: |
        # غیرفعال کردن هشدار root
        if grep -q "warn_on_root" buildozer.spec; then
          sed -i 's/warn_on_root = 1/warn_on_root = 0/g' buildozer.spec
        else
          echo "warn_on_root = 0" >> buildozer.spec
        fi
        
        # نمایش تنظیمات
        echo "=== Buildozer Configuration ==="
        cat buildozer.spec | grep -E "^(title|package|version|requirements)"
    
    - name: 🏗️ Build APK
      run: |
        buildozer android debug
    
    - name: 📋 List build output
      run: |
        echo "=== Build Directory ==="
        ls -lh bin/ || echo "No bin directory"
        
        echo ""
        echo "=== APK Files ==="
        find . -name "*.apk" -type f
    
    - name: 📤 Upload APK as artifact
      uses: actions/upload-artifact@v4
      with:
        name: VocabApp-v${{ github.run_number }}
        path: bin/*.apk
        retention-days: 30
        if-no-files-found: error
    
    - name: 📊 Build Summary
      if: success()
      run: |
        echo "✅ Build completed successfully!"
        echo ""
        echo "📦 APK Details:"
        for apk in bin/*.apk; do
          if [ -f "$apk" ]; then
            SIZE=$(du -h "$apk" | cut -f1)
            echo "  - $(basename "$apk"): $SIZE"
          fi
        done
